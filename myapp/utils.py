# import os
# from google.oauth2 import service_account
# from googleapiclient.discovery import build
# from googleapiclient.http import MediaFileUpload

# # ‚úÖ **‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå Service Account ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å Google Cloud**
# CREDENTIALS_FILE = "service_account.json"  # üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ

# # ‚úÖ **‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Google Drive**
# SCOPES = ["https://www.googleapis.com/auth/drive.file"]

# # ‚úÖ **‡πÉ‡∏™‡πà Google Drive Folder ID ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠**
# PARENT_FOLDER_ID = "1Mk4riuBzH5cl71OxAQMGsBZjcz3lsVVP"  # üìå ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Folder ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

# def upload_video_to_drive(file_path, file_name,user_email):
#     """ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Google Drive ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ File ID """
    
#     # ‡πÇ‡∏´‡∏•‡∏î Credentials ‡∏à‡∏≤‡∏Å service_account.json
#     creds = service_account.Credentials.from_service_account_file(
#         CREDENTIALS_FILE, scopes=SCOPES
#     )
    
#     # ‡∏™‡∏£‡πâ‡∏≤‡∏á Google Drive API service
#     service = build("drive", "v3", credentials=creds)

#     # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Metadata ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
#     file_metadata = {
#         "name": file_name,
#         "mimeType": "video/mp4",
#         "parents": [PARENT_FOLDER_ID]  # ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
#     }
    
#     # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
#     media = MediaFileUpload(file_path, mimetype="video/mp4", resumable=True)
#     file = service.files().create(body=file_metadata, media_body=media, fields="id").execute()

#         # ‡πÉ‡∏ä‡πâ Google Drive API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ
#     file_id = file.get("id")
#     grant_access_to_user(file_id, user_email)
    
#     return file.get("id")  # ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ Google Drive File ID
# def grant_access_to_user(file_id, user_email):
#     """ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Google Drive """
#     creds = service_account.Credentials.from_service_account_file(
#         'service_account.json', scopes=['https://www.googleapis.com/auth/drive']
#     )
    
#     service = build("drive", "v3", credentials=creds)
    
#     # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î permission
#     permission = {
#         'type': 'user',
#         'role': 'reader',  # ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á (reader = ‡∏î‡∏π‡πÑ‡∏î‡πâ)
#         'emailAddress': user_email  # ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á
#     }
    
#     # ‡πÄ‡∏û‡∏¥‡πà‡∏° permission ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå Google Drive
#     service.permissions().create(
#         fileId=file_id,
#         body=permission,
#         fields='id'
#     ).execute()


import os
import json
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload

# ‚úÖ ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Google Drive API
SCOPES = ["https://www.googleapis.com/auth/drive.file"]

# ‚úÖ Google Drive Folder ID ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
PARENT_FOLDER_ID = "1Mk4riuBzH5cl71OxAQMGsBZjcz3lsVVP"  # üìå ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Folder ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

def upload_video_to_drive(file_path, file_name, user_email):
    """‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå Google Drive ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ File ID"""

    try:
        # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Credentials ‡∏à‡∏≤‡∏Å Environment Variable
        service_account_info = json.loads(os.getenv("GOOGLE_CREDENTIALS"))

        # ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Escape Character
        service_account_info["private_key"] = service_account_info["private_key"].replace("\\n", "\n")

        creds = service_account.Credentials.from_service_account_info(service_account_info, scopes=SCOPES)

        # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Google Drive API service
        service = build("drive", "v3", credentials=creds)

        # ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Metadata ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
        file_metadata = {
            "name": file_name,
            "mimeType": "video/mp4",
            "parents": [PARENT_FOLDER_ID]  # ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏õ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        }

        # ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
        media = MediaFileUpload(file_path, mimetype="video/mp4", resumable=True)
        file = service.files().create(body=file_metadata, media_body=media, fields="id").execute()

        # ‚úÖ ‡πÉ‡∏ä‡πâ Google Drive API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ
        file_id = file.get("id")
        if file_id:
            grant_access_to_user(file_id, user_email)
            print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {file_id}")
            return file_id  # ‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ Google Drive File ID
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ")
            return None

    except Exception as e:
        print(f"‚ùå Error in upload_video_to_drive: {e}")
        return None

def grant_access_to_user(file_id, user_email):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Google Drive"""

    try:
        # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Credentials ‡∏à‡∏≤‡∏Å Environment Variable
        service_account_info = json.loads(os.getenv("GOOGLE_CREDENTIALS"))

        # ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Escape Character
        service_account_info["private_key"] = service_account_info["private_key"].replace("\\n", "\n")

        creds = service_account.Credentials.from_service_account_info(service_account_info, scopes=["https://www.googleapis.com/auth/drive"])

        service = build("drive", "v3", credentials=creds)

        # ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î permission
        permission = {
            'type': 'user',
            'role': 'reader',  # ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á (reader = ‡∏î‡∏π‡πÑ‡∏î‡πâ)
            'emailAddress': user_email  # ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á
        }

        # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° permission ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå Google Drive
        service.permissions().create(
            fileId=file_id,
            body=permission,
            fields='id'
        ).execute()

        print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ {user_email} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå {file_id} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

    except Exception as e:
        print(f"‚ùå Error in grant_access_to_user: {e}")
